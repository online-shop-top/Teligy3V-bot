export default {
  async fetch(request, env) {
    if (request.method === "POST") {
      const update = await request.json();
      console.log("Incoming update:", JSON.stringify(update));

      // 1Ô∏è‚É£ –ù–æ–≤–∏–π —É—á–∞—Å–Ω–∏–∫ –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è
      if (update.message && update.message.new_chat_members) {
        for (const member of update.message.new_chat_members) {
          const chatId = update.message.chat.id;
          const userId = member.id;
          const firstName = member.first_name || "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á";

          // üîí –¢–∏–º—á–∞—Å–æ–≤–æ –±–ª–æ–∫—É—î–º–æ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å–Ω–∏–∫–∞
          await fetch(`https://api.telegram.org/bot${env.TG_BOT_TOKEN}/restrictChatMember`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              chat_id: chatId,
              user_id: userId,
              permissions: { can_send_messages: false },
            }),
          });

          // üí¨ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é
          const keyboard = {
            inline_keyboard: [
              [{ text: "‚úÖ –ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è", callback_data: `join_${userId}` }],
            ],
          };

          const messageResp = await fetch(`https://api.telegram.org/bot${env.TG_BOT_TOKEN}/sendMessage`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              chat_id: chatId,
              text: `üëã –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ, ${firstName}!\n\n–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ —á–∞—Ç—É.\n\n‚è≥ –Ø–∫—â–æ –Ω–µ –Ω–∞—Ç–∏—Å–Ω–µ—à –ø—Ä–æ—Ç—è–≥–æ–º 2 —Ö–≤–∏–ª–∏–Ω ‚Äî —Ç–µ–±–µ –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ.`,
              reply_markup: keyboard,
            }),
          });

          const msgData = await messageResp.json();
          console.log("Join message:", JSON.stringify(msgData));

          // ‚ö†Ô∏è –ü–ª–∞–Ω—É—î–º–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
          const cleanupUrl = `https://api.telegram.org/bot${env.TG_BOT_TOKEN}/kickChatMember`;
          const cleanupData = { chat_id: chatId, user_id: userId };

          // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Cloudflare's scheduled task —á–µ—Ä–µ–∑ setTimeout-–ø–æ–¥—ñ–±–Ω—É –ª–æ–≥—ñ–∫—É
          // (–∞–ª–µ —É Worker —Ü–µ —Ä–æ–±–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ setTimeout —É Promise)
          setTimeout(async () => {
            try {
              // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —â–µ –º–∞—î –æ–±–º–µ–∂–µ–Ω–Ω—è (mute)
              const chatMemberResp = await fetch(
                `https://api.telegram.org/bot${env.TG_BOT_TOKEN}/getChatMember?chat_id=${chatId}&user_id=${userId}`
              );
              const chatMember = await chatMemberResp.json();

              // –Ø–∫—â–æ –¥–æ—Å—ñ –æ–±–º–µ–∂–µ–Ω–∏–π (—â–µ –Ω–µ –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è)
              if (
                chatMember.ok &&
                chatMember.result &&
                chatMember.result.status === "restricted"
              ) {
                console.log(`Removing inactive member: ${userId}`);

                // –í–∏–¥–∞–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                await fetch(cleanupUrl, {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify(cleanupData),
                });

                // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –≥—Ä—É–ø—ñ
                await fetch(`https://api.telegram.org/bot${env.TG_BOT_TOKEN}/sendMessage`, {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({
                    chat_id: chatId,
                    text: `‚ùå ${firstName} –Ω–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏–≤ —É—á–∞—Å—Ç—å —ñ –±—É–≤ –≤–∏–¥–∞–ª–µ–Ω–∏–π.`,
                  }),
                });
              }
            } catch (err) {
              console.error("Cleanup error:", err);
            }
          }, 2 * 60 * 1000); // 2 —Ö–≤–∏–ª–∏–Ω–∏
        }
      }

      // 2Ô∏è‚É£ –ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è"
      if (update.callback_query) {
        const data = update.callback_query.data;
        const chatId = update.callback_query.message.chat.id;
        const userId = update.callback_query.from.id;

        if (data === `join_${userId}`) {
          // üîì –ó–Ω—ñ–º–∞—î–º–æ –æ–±–º–µ–∂–µ–Ω–Ω—è
          await fetch(`https://api.telegram.org/bot${env.TG_BOT_TOKEN}/restrictChatMember`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              chat_id: chatId,
              user_id: userId,
              permissions: {
                can_send_messages: true,
                can_send_media_messages: true,
                can_send_polls: true,
                can_send_other_messages: true,
                can_add_web_page_previews: true,
                can_invite_users: true,
              },
            }),
          });

          // ‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
          await fetch(`https://api.telegram.org/bot${env.TG_BOT_TOKEN}/answerCallbackQuery`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              callback_query_id: update.callback_query.id,
              text: "‚úÖ –¢–∏ –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ —á–∞—Ç—É!",
              show_alert: false,
            }),
          });

          // üóë –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é
          await fetch(`https://api.telegram.org/bot${env.TG_BOT_TOKEN}/deleteMessage`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              chat_id: chatId,
              message_id: update.callback_query.message.message_id,
            }),
          });

          // üó® –í—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
          await fetch(`https://api.telegram.org/bot${env.TG_BOT_TOKEN}/sendMessage`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              chat_id: chatId,
              text: `üéâ –í—ñ—Ç–∞—î–º–æ, ${update.callback_query.from.first_name}, —Ç–µ–ø–µ—Ä —Ç–∏ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–∏–π —É—á–∞—Å–Ω–∏–∫ –≥—Ä—É–ø–∏!`,
            }),
          });
        }
      }

      return new Response("OK", { status: 200 });
    }

    // 3Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä
    return new Response("Hello from Telegram Group Bot!", { status: 200 });
  },
};
