export default {
  async fetch(request, env) {
    if (request.method === "POST") {
      const update = await request.json();

      if (update.message) {
        const chatId = update.message.chat.id;
        const firstName = update.message.from.first_name || "–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á";
        const text = update.message.text || "";

        // –ü—Ä–∏ –∫–æ–º–∞–Ω–¥—ñ /start –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –≤—ñ—Ç–∞–Ω–Ω—è —Ç–∞ –∫–Ω–æ–ø–∫—É
        if (text === "/start") {
          const keyboard = {
            inline_keyboard: [
              [{ text: "–ü–†–ò–Ñ–î–ù–ê–¢–ò–°–¨", callback_data: "join_request" }],
            ],
          };

          await fetch(`https://api.telegram.org/bot${env.TG_BOT_TOKEN}/sendMessage`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              chat_id: chatId,
              text: `üëã –ü—Ä–∏–≤—ñ—Ç, ${firstName}!\n–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –ø–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ –ø—Ä–∏—î–¥–Ω–∞–Ω–Ω—è –¥–æ –≥—Ä—É–ø–∏`,
              reply_markup: keyboard,
            }),
          });

          return new Response("OK", { status: 200 });
        }
      }

      if (update.callback_query) {
        const chatId = update.callback_query.from.id;
        const data = update.callback_query.data;

        if (data === "join_request") {
          await fetch(`https://api.telegram.org/bot${env.TG_BOT_TOKEN}/sendMessage`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              chat_id: chatId,
              text: "–ü—Ä–∏–≤—ñ—Ç! –©–æ–± –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –≥—Ä—É–ø–∏, –≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä–∏",
            }),
          });

          return new Response("OK", { status: 200 });
        }
      }

      return new Response("OK", { status: 200 });
    }

    return new Response("Hello from Worker!", { status: 200 });
  },
};
